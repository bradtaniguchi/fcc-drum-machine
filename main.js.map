{"version":3,"sources":["./projects/client/src/app/app.component.ts","./projects/client/src/app/app.component.html","./projects/client/src/app/app-routing.module.ts","./projects/client/src/app/app.module.ts","./projects/client/src/app/modules/drum-machine/drum-machine.module.ts","./projects/client/src/environments/environment.ts","./projects/client/src/main.ts","./projects/client/$_lazy_route_resource lazy namespace object","./projects/client/src/app/modules/drum-machine/drum-machine.component.ts","./projects/client/src/app/modules/drum-machine/drum-machine.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'dm-root',\n  templateUrl: './app.component.html',\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<main class=\"dark-theme mat-app-background\">\n  <router-outlet></router-outlet>\n</main>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DrumMachineComponent } from './modules/drum-machine/drum-machine.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DrumMachineComponent,\n  },\n  {\n    path: '**',\n    redirectTo: '/',\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      // required to work in github-pages\n      useHash: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DrumMachineModule } from './modules/drum-machine/drum-machine.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, DrumMachineModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { GridModule } from '@angular/flex-layout/grid';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { DrumMachineComponent } from './drum-machine.component';\n\n@NgModule({\n  declarations: [DrumMachineComponent],\n  imports: [\n    CommonModule,\n    // Angular Material\n    GridModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n  ],\n})\nexport class DrumMachineModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"rt7u\";","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\ninterface DrumMachineButton {\n  display: string;\n  key: string;\n  music: string;\n}\n@Component({\n  selector: 'dm-drum-machine',\n  templateUrl: './drum-machine.component.html',\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DrumMachineComponent implements OnInit {\n  public buttons: Array<DrumMachineButton> = [\n    {\n      display: 'Q',\n      key: 'q',\n      music: '178[kb]synth-melody-hyperion1.wav.mp3',\n    },\n    {\n      display: 'W',\n      key: 'w',\n      music: '175[kb]synth-melody-hyperion2.wav.mp3',\n    },\n    {\n      display: 'E',\n      key: 'e',\n      music: '173[kb]synth-melody-hyperion3.wav.mp3',\n    },\n    {\n      display: 'A',\n      key: 'a',\n      music: '26[kb]BDRUM13.aif.mp3',\n    },\n    {\n      display: 'S',\n      key: 's',\n      music: '39[kb]8000clap16.wav.mp3',\n    },\n    {\n      display: 'D',\n      key: 'd',\n      music: '160[kb]ambient_kick.aif.mp3',\n    },\n    {\n      display: 'Z',\n      key: 'z',\n      music: '51[kb]hrcsnare-37.wav.mp3',\n    },\n    {\n      display: 'X',\n      key: 'x',\n      music: '57[kb]acoustic_snare.aif.mp3',\n    },\n    {\n      display: 'C',\n      key: 'c',\n      music: '233[kb]dyeahhhhuh.aif.mp3',\n    },\n  ];\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  public onButtonClick(button: DrumMachineButton, audio: HTMLAudioElement) {\n    console.log('button', button);\n    audio.play();\n    // TODO: do stuff\n  }\n}\n","<div gdAlignColumns=\"center\"\n     gdAlignRows=\"center\"\n     class=\"full-height\">\n  <mat-card>\n    <mat-card-content>\n      <div id=\"drum-machine\">\n        <div fxLayout=\"row\"\n             fxLayoutAlign=\"start center\">\n          <span id=\"display\"\n                class=\"mat-body-2\"\n                style=\"min-height: 24px\"\n                fxFlex=\"80\">\n            Letter\n          </span>\n          <span fxFlex=\"20\">\n            <button mat-icon-button>\n              <mat-icon>more_vert</mat-icon>\n            </button>\n          </span>\n        </div>\n        <div gdColumns=\"1fr 1fr 1fr\"\n             gdGap=\"8px\">\n          <ng-container *ngFor=\"let button of buttons\">\n            <div>\n              <button mat-flat-button\n                      color=\"primary\"\n                      class=\"drum-pad\"\n                      [id]=\"button.music\"\n                      (click)=\"onButtonClick(button, audio)\">\n                <audio [src]=\"'/assets/default-music/' + button.music\"\n                       [id]=\"button.display\"\n                       class=\"clip\"\n                       #audio></audio>\n                {{button.display}}\n              </button>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n</div>"],"sourceRoot":"webpack:///"}